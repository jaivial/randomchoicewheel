# Improved Nginx Configuration with URL Canonicalization
# This configuration addresses the SEO canonicalization issues

# HTTPS redirect and www canonicalization
server {
    listen 80;
    listen [::]:80;
    server_name randomchoicewheel.com www.randomchoicewheel.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://randomchoicewheel.com$request_uri;
}

# Redirect www to non-www (canonicalization)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.randomchoicewheel.com;
    
    # SSL certificate paths (will be configured by certbot)
    ssl_certificate /etc/letsencrypt/live/randomchoicewheel.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/randomchoicewheel.com/privkey.pem;
    
    # Redirect www to non-www for canonicalization
    return 301 https://randomchoicewheel.com$request_uri;
}

# Main server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name randomchoicewheel.com;
    root /var/www/randomchoicewheel.com;
    index index.html index.htm;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/randomchoicewheel.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/randomchoicewheel.com/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # HSTS Header (addresses LOW priority SEO issue)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Enhanced Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' https://pagead2.googlesyndication.com https://googleads.g.doubleclick.net https://www.google.com https://fonts.googleapis.com https://fonts.gstatic.com https://*.googlesyndication.com https://*.doubleclick.net data: blob:;" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;
    
    # Gzip compression for performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;
    
    # Brotli compression (if available)
    brotli on;
    brotli_comp_level 6;
    brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript  application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;
    
    # Main location block
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files (short cache to allow updates)
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }
    }
    
    # Optimized static asset caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|webp|avif|woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
        
        # Precompressed file serving
        location ~* \.(js|css)$ {
            gzip_static on;
            brotli_static on;
        }
    }
    
    # Modern image format handling
    location ~* \.(png|jpg|jpeg)$ {
        # Try WebP first if browser supports it
        location ~* \.(png|jpg|jpeg)$ {
            add_header Vary "Accept";
            try_files $uri$webp_suffix $uri =404;
        }
    }
    
    # Favicon optimization
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Robots.txt and sitemap.xml optimization
    location = /robots.txt {
        log_not_found off;
        access_log off;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    location = /sitemap.xml {
        log_not_found off;
        access_log off;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Service worker caching
    location = /sw.js {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # Custom 404 error page (addresses HIGH priority SEO issue)
    error_page 404 /404.html;
    location = /404.html {
        internal;
        root /var/www/randomchoicewheel.com;
    }
    
    # Error pages for server errors
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
        root /var/www/randomchoicewheel.com;
    }
    
    # Security: deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security: deny access to backup files
    location ~* \.(bak|backup|old|orig|tmp|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security: deny access to configuration files
    location ~* \.(conf|config|ini)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logging
    access_log /var/log/nginx/randomchoicewheel.com.access.log;
    error_log /var/log/nginx/randomchoicewheel.com.error.log;
}

# WebP detection map
map $http_accept $webp_suffix {
    "~*webp" ".webp";
}